on: [push]
jobs:
  build-and-deploy:
    env:
      REGISTRY_URL: kapasrijkubacr.azurecr.io
      SERVICE_NAME: kpjavakubernetes
      NAMESPACE: kpjavakubernetes
      IMAGE_NAME: kpjavakubernetes
      APP_NAME: kpjavakubernetes
      SECRET_NAME: kpjavakubernetesdockerauth

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    
    - uses: azure/docker-login@v1
      with:
        login-server: kapasrijkubacr.azurecr.io
        username: kapasrijkubacr
        password: s+Hpaz1jpJFcwmq647n+IpLepCicg4G3
    
    - name: Build and push image to ACR
      id: build-image
      run: |
        docker build "$GITHUB_WORKSPACE/node/plain/container/Application" -f  "node/plain/container/Application/Dockerfile" -t  $REGISTRY_URL/$IMAGE_NAME:${{ github.sha }}
        docker push $REGISTRY_URL/$IMAGE_NAME:${{ github.sha }}
    
    - uses: azure/k8s-set-context@v1
      with:
         kubeconfig: ${{ secrets.kpjavakubernetes_9f4a6 }} #$ }}
      id: login
    
    - name: Create namespace
      run: |
        namespacePresent=`kubectl get namespace | grep $NAMESPACE | wc -l`
        if [ $namespacePresent -eq 0 ]
        then
            echo `kubectl create namespace $NAMESPACE`
        fi

    - uses: azure/k8s-create-secret@v1
      with:
        namespace: kpjavakubernetes
        container-registry-url: kapasrijkubacr.azurecr.io
        container-registry-username: kapasrijkubacr
        container-registry-password: s+Hpaz1jpJFcwmq647n+IpLepCicg4G3
        secret-name: kpjavakubernetesdockerauth
       
    - uses: azure/k8s-deploy@v1
      with:
        namespace: kpjavakubernetes
        manifests: |
          $GITHUB_WORKSPACE/.github/dependencies/deployment.yml
          $GITHUB_WORKSPACE/.github/dependencies/serviceFile.yml

        images: |
          kapasrijkubacr.azurecr.io/kpjavakubernetes:${{ github.sha }}
        imagepullsecrets: |
          kpjavakubernetesdockerauth
