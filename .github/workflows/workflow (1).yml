on: [push]
jobs:
  build-and-deploy:
    env:
      REGISTRY_URL: kapasrijkubacr.azurecr.io
      SERVICE_NAME: kpjavakubernetes1  
      NAMESPACE: kpjavakubernetes1  
      IMAGE_NAME: kpjavakubernetes1
      APP_NAME: kpjavakubernetes1
      SECRET_NAME: kpjavakubernetesdockerauth1

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    
    - uses: azure/docker-login@v1
      with:
        login-server: kapasrijkubacr.azurecr.io
        username: ${{ secrets.kpjavakubernetes_b6c0c_username }}
        password: ${{ secrets.kpjavakubernetes_b6c0c_password }}
    
    - name: Build and push image to ACR
      id: build-image
      run: |
        docker build "$GITHUB_WORKSPACE/node/plain/container/Application" -f  "node/plain/container/Application/Dockerfile" -t  $REGISTRY_URL/$IMAGE_NAME:abc
        docker push $REGISTRY_URL/$IMAGE_NAME:abc
    
    - uses: azure/k8s-set-context@v1
      with:
         kubeconfig: ${{ secrets.kpjavakubernetes_b6c0c }}
      id: login
    
    - name: Create namespace
      run: |
        namespacePresent=`kubectl get namespace | grep $NAMESPACE | wc -l`
        if [ $namespacePresent -eq 0 ]
        then
            echo `kubectl create namespace $NAMESPACE`
        fi

    - uses: azure/k8s-create-secret@v1
      with:
        namespace: kpjavakubernetes1
        container-registry-url: kapasrijkubacr.azurecr.io
        container-registry-username: ${{ secrets.kpjavakubernetes_b6c0c_username }}
        container-registry-password: ${{ secrets.kpjavakubernetes_b6c0c_password }}
        secret-name: kpjavakubernetesdockerauth1
       
    - name: Generate Kubernetes Manifest file
      id: manifest-creation
      run: |
        echo -e "apiVersion: apps/v1beta1\nkind: Deployment\nmetadata:\n    name: $APP_NAME\nspec:\n    replicas: 2\n    template:\n        metadata:\n            labels: {app: $APP_NAME}\n        spec:\n            containers: [{name: $APP_NAME, image: $REGISTRY_URL/$IMAGE_NAME, ports: null}, {containerPort: 8080}]\napiVersion: v1\nkind: Service\nmetadata:\n    name: $APP_NAME\n    labels:\n        app: $APP_NAME\nspec:\n    type: LoadBalancer\n    ports:\n        - port: 8080\n            targetPort: http\n            protocol: TCP\n            name: http\n    selector:\n        app: $APP_NAME" > manifest00_.yml
        
    - uses: azure/k8s-deploy@v1
      with:
        namespace: kpjavakubernetes1
        manifests: |
          manifest00.yml }}}
        images: |
          kapasrijkubacr.azurecr.io/kpjavakubernetes1:abc
        imagepullsecrets: |
          kpjavakubernetesdockerauth1
